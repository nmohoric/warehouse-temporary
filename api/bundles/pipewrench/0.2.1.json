{"templates": {"dump": {"body": "~each var=$results~\n~if cond=$item.env~\n**Environment Variables**\n\n| Name | Value |\n|------|-------|\n~each var=$item.env as=e~|~$e.name~|~$e.value~|\n~end~\n~br~\n~end~\n~if cond=$item.input~\n**Inputs**\n~json var=$item.input~\n~br~\n~end~\n~end~\n"}}, "commands": {"for": {"executable": "/home/bundle/cog-command", "description": "Generator function for pipeline inputs", "rules": ["when command is pipewrench:for allow"], "arguments": "<name> in <arg1> [<arg2>...]", "long_description": "Create a list of objects with the value of arg1..N as the value of the field with the given name", "examples": "pipewrench:for x in a b c | operable:echo $x\n> a\n  b\n  c\n"}, "dump": {"executable": "/home/bundle/cog-command", "options": {"input": {"short_flag": "i", "required": false, "type": "bool", "description": "Only return STDIN content"}, "env": {"short_flag": "e", "required": false, "type": "bool", "description": "Only return environment variables"}}, "description": "Return Cog pipeline options and input", "rules": ["when command is pipewrench:dump allow"], "long_description": "Show the environment variables and inputs that a command would receive. Useful for debugging commands.", "examples": "pipewrench:for x in a | pipewrench:dump\n"}}, "description": "Miscellaneous Cog pipeline utilities", "author": "Operable <support@operable.io>", "name": "pipewrench", "version": "0.2.1", "docker": {"image": "cogcmd/pipewrench", "tag": "0.2.1"}, "homepage": "https://github.com/cogcmd/pipewrench", "cog_bundle_version": 4}