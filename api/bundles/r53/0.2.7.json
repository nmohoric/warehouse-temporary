{"templates": {"records_list": {"body": "~each var=$results as=record~\n~attachment color=gray~\n**Zone:** ~$record.Zone~\n**Record Type:** ~$record.Type~\n**Record Name:** ~$record.Name~\n~if cond=$record.AliasTarget bound?~\n**Alias Target Name:** ~$record.AliasTarget.DNSName~\n~end~\n~if cond=$record.ResourceRecords bound?~\n**Target:** ~$record.ResourceRecords~\n~end~\n~end~\n~end~\n"}, "zones_list": {"body": "~each var=$results as=zone~\n~attachment color=$zone.Color~\n**Zone ID:** ~$zone.Id~\n**Zone Name:** ~$zone.Name~\n**Records:** ~$zone.ResourceRecordSetCount~\n~end~\n~end~\n"}, "record_create": {"body": "~each var=$results as=record~\n~attachment color=$record.Response.Color~\n**Request:** ~$record.Request~\n~end~\n~end~\n"}}, "commands": {"record-create": {"executable": "/usr/local/bin/cog-sub-command", "description": "Creates a new Resource Record.", "rules": ["must have r53:write"], "documentation": "Create new Resource Records.\n\nBasic records or Alias records.\n", "options": {"alias-target-zone": {"short_flag": "a", "required": false, "type": "string", "description": "Required for Aliases. (Mutually exclusive with --ttl)"}, "type": {"short_flag": "t", "required": true, "type": "string", "description": "Specify Record Type. 'SOA'|'A'|'TXT'|'NS'|'CNAME'|'MX'|'NAPTR'|'PTR'|'SRV'|'SPF'|'AAAA'"}, "zone": {"short_flag": "z", "required": true, "type": "string", "description": "ID of the Zone. Run r53:zone-list for list of available Zones."}, "ttl": {"required": false, "type": "string", "description": "default = 60. (Mutually exclusive with --alias-target-zone)"}}, "arguments": "<name> <dns name> [<values>]"}, "record-list": {"rules": ["must have r53:read"], "executable": "/usr/local/bin/cog-sub-command", "documentation": "Enumerate and view existing Resource Records\n\nr53:record list\n", "description": "Enumerate and view existing Records within a zone", "options": {"type": {"short_flag": "t", "required": false, "type": "list", "description": "Filter on RecordType(s). 'SOA'|'A'|'TXT'|'NS'|'CNAME'|'MX'|'NAPTR'|'PTR'|'SRV'|'SPF'|'AAAA'"}, "name": {"short_flag": "n", "required": false, "type": "string", "description": "Filter down to records that contain this string in their name."}, "zone": {"short_flag": "z", "required": true, "type": "list", "description": "ID(s) of the Zone. Run r53:zone for list of available Zones."}}}, "zone": {"rules": ["must have r53:read"], "executable": "/usr/local/bin/cog-command", "documentation": "Enumerate and view existing Hosted Zones\n\nr53:zone list\n", "description": "Enumerate and view existing Hosted Zones", "options": {"name": {"short_flag": "n", "required": false, "type": "string", "description": "Filter down to zones that contain this string in their name."}}}}, "description": "Interact with Route53 in AWS", "name": "r53", "version": "0.2.7", "docker": {"image": "quay.io/honestbee/cog-r53", "tag": "0.2.7"}, "cog_bundle_version": 4, "config": {"notes": "When creating the access key for use with the following environment variables, make sure the IAM user that owns the key has the AmazonRoute53FullAccess policy.\n", "env": [{"var": "AWS_ACCESS_KEY_ID", "description": "Requried ID of the access key used to authenticate with the AWS API"}, {"var": "AWS_SECRET_ACCESS_KEY", "description": "Required secret of the access key used to authenticate with the AWS API"}]}, "long_description": "This bundle provides commands for viewing, inspecting, and controlling Route53 Hosted Zones and Resource Records on AWS. To communicate with the AWS API we use the boto3 library written in Python. Permissions are used to control which users are authorized to run each command. Listing and searching for resources requires the r53:read permission. Modifying the state or other values of a resource requires the r53:write permission. And, destroying a resource requires the r53:admin permission.\n", "permissions": ["r53:read", "r53:write", "r53:admin"]}